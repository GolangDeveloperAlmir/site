name: CI

on:
  pull_request:
    branches: [main, release, stage, deployments]
  push:
    branches:
      - main
      - release
      - stage
      - deployments
      - 'codex/**'
      - 'features/**'

permissions:
  contents: read
  pull-requests: read

concurrency:
  group: ci-${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: false

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-node@v5
        with:
          node-version: 22
          cache: 'yarn'
          cache-dependency-path: package.json
      - run: corepack enable
      - run: yarn install
      - run: yarn lint

  test:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-node@v5
        with:
          node-version: 22
          cache: 'yarn'
          cache-dependency-path: package.json
      - run: corepack enable
      - run: yarn install
      - run: yarn test --ci --passWithNoTests

  build:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-node@v5
        with:
          node-version: 22
          cache: 'yarn'
          cache-dependency-path: package.json
      - run: corepack enable
      - run: yarn install
      - run: yarn build

  docker:
    runs-on: ubuntu-latest
    needs: build
    if: ${{ github.event_name == 'push' }}
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v5
      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3
      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Set repository lowercase
        run: echo "REPO_LC=${GITHUB_REPOSITORY,,}" >> $GITHUB_ENV
      - name: Build & push image
        uses: docker/build-push-action@v6
        with:
          push: true
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          tags: |
            ghcr.io/${{ env.REPO_LC }}:${{ github.sha }}
            ghcr.io/${{ env.REPO_LC }}:sha-${{ github.sha }}
          provenance: false

  promote:
    if: ${{ github.event_name == 'push' && (startsWith(github.ref_name, 'codex/') || github.ref_name == 'deployments' || github.ref_name == 'stage' || github.ref_name == 'release') }}
    runs-on: ubuntu-latest
    needs: docker
    permissions:
      contents: write
      pull-requests: write
    env:
      GH_TOKEN: ${{ github.token }}
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Compute head/base
        id: route
        shell: bash
        run: |
          set -euo pipefail
          BR="${GITHUB_REF_NAME}"
          if [[ "$BR" == codex/* ]]; then
            FEAT="${BR#codex/}"
            echo "head=features/${FEAT}" >> $GITHUB_OUTPUT
            echo "base=deployments"      >> $GITHUB_OUTPUT
            echo "push_features=true"     >> $GITHUB_OUTPUT
          elif [[ "$BR" == "deployments" ]]; then
            echo "head=deployments" >> $GITHUB_OUTPUT
            echo "base=stage"       >> $GITHUB_OUTPUT
          elif [[ "$BR" == "stage" ]]; then
            echo "head=stage"   >> $GITHUB_OUTPUT
            echo "base=release" >> $GITHUB_OUTPUT
          elif [[ "$BR" == "release" ]]; then
            echo "head=release" >> $GITHUB_OUTPUT
            echo "base=main"    >> $GITHUB_OUTPUT
          else
            echo "Not promotable"; exit 0
          fi

      - name: Push codex/* â†’ features/*
        if: steps.route.outputs.push_features == 'true'
        run: |
          git config user.name  "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git push origin "HEAD:${{ steps.route.outputs.head }}"

      - name: Create PR idempotently
        shell: bash
        run: |
          set -euo pipefail
          HEAD_REF="${{ steps.route.outputs.head }}"
          BASE_REF="${{ steps.route.outputs.base }}"
          COUNT="$(gh pr list --head "$HEAD_REF" --base "$BASE_REF" --state open --json number --jq 'length')"
          if [ "${COUNT:-0}" -gt 0 ]; then
            echo "PR $HEAD_REF -> $BASE_REF already exists; skipping."
            exit 0
          fi
          gh pr create \
            --head "$HEAD_REF" \
            --base "$BASE_REF" \
            --title "Promote ${HEAD_REF} to ${BASE_REF}" \
            --body "Automated promotion from ${HEAD_REF} to ${BASE_REF}"
